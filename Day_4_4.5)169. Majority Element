Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2


class Solution {
public:
    int majorityElement(vector<int>& nums) {
            sort(nums.begin(), nums.end());
        int maj = nums.size()/2, count = 0, index = 0;
        for(int i = 0 ; i < nums.size() - 1; i++)
        {
            if(nums[i] == nums[i + 1])
            {
                index = i;
                count++;
            }
            if(count >= maj)
                break;
        }
        return nums[index];
    } 
    
};
